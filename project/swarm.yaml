version: '3'

services:
  caddy-service:
    image: toandeveloper99/micro-gochi-caddy:v1.0.1
    deploy:
      mode: replicated
      replicas: 1
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./caddy_data:/data
      - ./caddy_config:/config

  frontend-service:
    image: toandeveloper99/micro-gochi-frontend:v1.0.0
    deploy:
      mode: replicated
      replicas: 1
    environment:
      BROKER_URL: "http://broker-service"
  broker-service:
    image: toandeveloper99/micro-gochi-broker:v1.0.0
    ports:
      - "8080:80"
    deploy:
      mode: replicated
      replicas: 1

  listener-service:
    image: toandeveloper99/micro-gochi-listener:v1.0.0
    deploy:
      mode: replicated
      replicas: 1

  authentication-service:
    image: toandeveloper99/micro-gochi-authentication:v1.0.0
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: "host=postgres port=5432 user=postgres password=password dbname=users sslmode=disable timezone=UTC connect_timeout=5"

  logger-service:
    image: toandeveloper99/micro-gochi-logger:v1.0.0
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: "host=postgres port=5432 user=postgres password=password dbname=users sslmode=disable timezone=UTC connect_timeout=5"

  mailer-service:
    image: toandeveloper99/micro-gochi-mailer:v1.0.1
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MAIL_DOMAIN: localhost
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
      MAIL_ENCRYPTION: none
      MAIL_USERNAME: ""
      MAIL_PASSWORD: ""
      MAIL_NAME: "Nguyen Viet Thanh Toan"
      MAIL_ADDRESS: toan.nguyen@example.com

  postgres:
    image: 'postgres:14.0'
    ports:
      - "5432:5432"
    deploy:
      mode: global
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data/
  mongo:
    image: 'mongo:4.2.16-bionic'
    ports:
      - "27017:27017"
    restart: always
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./db-data/mongo/:/data/db
    deploy:
      mode: global

  mail-hog:
    image: 'mailhog/mailhog:latest'
    ports:
      - "1025:1025"
      - "8025:8025"
    deploy:
      mode: global

  rabbitmq:
    image: 'rabbitmq:3.11'
    ports:
      - "5672:5672"
    deploy:
      mode: global
    volumes:
      - ./db-data/rabbitmq/:/var/lib.rabbitmq/

volumes:
  caddy_data:
    external: true
  caddy_config:


